{"version":3,"sources":["../../src/controllers/feed.js"],"names":["getFeeds","req","res","axios","get","then","response","xml2js","parseString","data","error","result","status","json","success","feed","entry","author","name","avatar","url","uri","content","image","link","$","rel","href","source","title","published_date","published","updated_date","updated","catch","message"],"mappings":";;;;;;;AACA;;;;AACA;;;;AACA;;;;AAEO,IAAMA,8BAAW,SAAXA,QAAW,CAACC,GAAD,EAAMC,GAAN,EAAc;AACpCC,kBACGC,GADH,CACO,yDADP,EAEGC,IAFH,CAEQ,UAACC,QAAD;AAAA,WACJC,iBAAOC,WAAP,CAAmBF,SAASG,IAA5B,EAAkC,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACnDT,UAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,iBAAS,IADU;AAEnBL,cAAM,iBAAIE,OAAOI,IAAP,CAAYC,KAAhB,EAAuB,UAACP,IAAD;AAAA,iBAAW;AACtCQ,oBAAQ;AACNC,oBAAMT,KAAKQ,MAAL,CAAY,CAAZ,EAAeC,IAAf,CAAoB,CAApB,CADA;AAENC,sBAAQV,KAAKQ,MAAL,CAAY,CAAZ,EAAe,kBAAf,EAAmC,CAAnC,CAFF;AAGNG,mBAAKX,KAAKQ,MAAL,CAAY,CAAZ,EAAeI,GAAf,CAAmB,CAAnB;AAHC,aAD8B;AAMtCC,qBAAS;AACPC,qBAAO,kBAAKd,KAAKe,IAAV,EAAgB,UAACA,IAAD;AAAA,uBAAUA,KAAKC,CAAL,CAAOC,GAAP,KAAe,WAAzB;AAAA,eAAhB,EAAsDD,CAAtD,CACJE,IAFI;AAGPC,sBAAQ,kBAAKnB,KAAKe,IAAV,EAAgB,UAACA,IAAD;AAAA,uBAAUA,KAAKC,CAAL,CAAOC,GAAP,KAAe,WAAzB;AAAA,eAAhB,EAAsDD,CAAtD,CACLE;AAJI,aAN6B;AAYtCE,mBAAOpB,KAAKoB,KAAL,CAAW,CAAX,CAZ+B;AAatCC,4BAAgBrB,KAAKsB,SAAL,CAAe,CAAf,CAbsB;AActCC,0BAAcvB,KAAKwB,OAAL,CAAa,CAAb;AAdwB,WAAX;AAAA,SAAvB;AAFa,OAArB;AAmBD,KApBD,CADI;AAAA,GAFR,EAyBGC,KAzBH,CAyBS,YAAM;AACXhC,QAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,eAAS,KADU;AAEnBqB,eAAS;AAFU,KAArB;AAID,GA9BH;AA+BD,CAhCM,C,CALP","file":"feed.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport axios from 'axios'\nimport xml2js from 'xml2js'\nimport { map, find } from 'lodash'\n\nexport const getFeeds = (req, res) => {\n  axios\n    .get('https://api.flickr.com/services/feeds/photos_public.gne')\n    .then((response) =>\n      xml2js.parseString(response.data, (error, result) => {\n        res.status(200).json({\n          success: true,\n          data: map(result.feed.entry, (data) => ({\n            author: {\n              name: data.author[0].name[0],\n              avatar: data.author[0]['flickr:buddyicon'][0],\n              url: data.author[0].uri[0]\n            },\n            content: {\n              image: find(data.link, (link) => link.$.rel === 'enclosure').$\n                .href,\n              source: find(data.link, (link) => link.$.rel === 'alternate').$\n                .href\n            },\n            title: data.title[0],\n            published_date: data.published[0],\n            updated_date: data.updated[0]\n          }))\n        })\n      })\n    )\n    .catch(() => {\n      res.status(500).json({\n        success: false,\n        message: 'Server Error!'\n      })\n    })\n}\n"]}